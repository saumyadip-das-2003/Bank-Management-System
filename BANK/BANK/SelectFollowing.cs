using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace BANK
{
    public partial class SelectFollowing : Form
    {
        string username;
        string name;
        string designation;
        int applicationID;

        public SelectFollowing(string name, string designation, int applicationID, string username)
        {
            InitializeComponent();
            this.name = name;
            this.designation = designation;
            this.applicationID = applicationID;
            this.username = username;
        }

        private void btnHire_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(txtSalary.Text) || comboDesignation.SelectedIndex == -1)
            {
                MessageBox.Show("Please enter all required fields.");
                return;
            }

            if (!decimal.TryParse(txtSalary.Text, out decimal salary) || salary < 0)
            {
                MessageBox.Show("Please enter a valid non-negative salary.");
                return;
            }

            string password = "1234";
            string hiredBy = username;

            // Insert employee without EmployeeID, as it is auto-generated by the trigger
            using (SqlConnection con = DBConn.GetConnection())
            {
                string query = @"INSERT INTO Employee (EmployeeName, Salary, Designation, Password, ApplicationID, HiredBy) 
                                 VALUES (@EmployeeName, @Salary, @Designation, @Password, @ApplicationID, @HiredBy)";
                SqlCommand cmd = new SqlCommand(query, con);
                cmd.Parameters.AddWithValue("@EmployeeName", name);
                cmd.Parameters.AddWithValue("@Salary", salary);
                cmd.Parameters.AddWithValue("@Designation", designation);
                cmd.Parameters.AddWithValue("@Password", password);
                cmd.Parameters.AddWithValue("@ApplicationID", applicationID);
                cmd.Parameters.AddWithValue("@HiredBy", hiredBy);

                con.Open();
                cmd.ExecuteNonQuery();
            }

            // Update the JobApplications table to mark the applicant as hired
            using (SqlConnection con = DBConn.GetConnection())
            {
                string updateQuery = "UPDATE JobApplications SET Status = 'Hired' WHERE ApplicationID = @ApplicationID";
                SqlCommand updateCmd = new SqlCommand(updateQuery, con);
                updateCmd.Parameters.AddWithValue("@ApplicationID", applicationID);

                con.Open();
                updateCmd.ExecuteNonQuery();
            }

            txtSalary.Text = string.Empty;
            comboDesignation.SelectedIndex = -1;

            MessageBox.Show("Employee hired successfully.");
            this.Close();
        }
    }
}
